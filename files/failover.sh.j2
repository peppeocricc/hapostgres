#!/bin/bash
# This script is run by failover_command.

# Special values:
#   %d = failed node id
#   %h = failed node hostname
#   %p = failed node port number
#   %D = failed node database cluster path
#   %m = new main node id
#   %H = new main node hostname
#   %M = old main node id
#   %P = old primary node id
#   %r = new main port number
#   %R = new main database cluster path
#   %N = old primary node hostname
#   %S = old primary node port number
#   %% = '%' character

FAILED_NODE_ID="$1"
FAILED_NODE_HOST="$2"
FAILED_NODE_PORT="$3"
FAILED_NODE_PGDATA="$4"
NEW_MAIN_NODE_ID="$6"
NEW_MAIN_NODE_HOST="$7"
OLD_MAIN_NODE_ID="$5"
OLD_PRIMARY_NODE_ID="$8"
NEW_MAIN_NODE_PORT="$9"
NEW_MAIN_NODE_PGDATA="${10}"
OLD_PRIMARY_NODE_HOST="${11}"
OLD_PRIMARY_NODE_PORT="${12}"

PGHOME=/usr/pgsql-13

echo failover.sh: start: failed_node_id=$FAILED_NODE_ID old_primary_node_id=$OLD_PRIMARY_NODE_ID failed_host=$FAILED_NODE_HOST new_main_host=$NEW_MAIN_NODE_HOST

## If the failed node is not the primary don't do anything
if [ $FAILED_NODE_ID -ne $OLD_PRIMARY_NODE_ID ]; then
    echo failover.sh. The standby node $FAILED_NODE_ID failed. Detaching it.
    exit 0
fi

## If there's no main node anymore, skip failover.
if [ $NEW_MAIN_NODE_ID -lt 0 ]; then
    echo failover.sh: All nodes are down. Skipping failover.
	exit 0
fi

## Test passwrodless SSH
ssh -i ~/.ssh/pgpool_ssh_key -p {{ docker_db_ssh_port | default(22) }} -T -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null postgres@${NEW_MAIN_NODE_HOST} ls /tmp > /dev/null

if [ $? -ne 0 ]; then
    echo failover.sh: passwordless SSH to postgres@${NEW_MAIN_NODE_HOST} failed. Please setup passwordless SSH.
    exit 1
fi

# Try to bring down postgres on the Failed primary
ssh -i ~/.ssh/pgpool_ssh_key -p {{ docker_db_ssh_port | default(22) }} -T -o ConnectTimeout=10 -o StrictHostKeyChecking=no postgres@${FAILED_NODE_HOST} \
       "sudo /usr/bin/systemctl stop postgresql-13"

## Promote Standby node.
echo failover.sh: Primary node is down, promoting standby node ${NEW_MAIN_NODE_HOST}.

ssh -i ~/.ssh/pgpool_ssh_key -p {{ docker_db_ssh_port | default(22) }} -T -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
    postgres@${NEW_MAIN_NODE_HOST} \
    "/usr/pgsql-13/bin/repmgr -f /etc/repmgr/13/repmgr.conf standby promote --siblings-follow"

if [ $? -ne 0 ]; then
    echo failover.sh: end: failover failed
    exit 1
fi

echo failover.sh: end: new_main_node_id=$NEW_MAIN_NODE_ID is promoted to a primary
exit 0
