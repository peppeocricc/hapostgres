- name: Install postgresql repository
  yum:
    name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
    state: present

- name: Install postgresql 13
  yum:
    name: postgresql13-server,postgresql13-contrib
    state: present
  register: postgres_install

- name: Check that repmgr repo exists
  stat:
    path: /etc/yum.repos.d/2ndquadrant-dl-default-release-pg13.repo
  register: repmgr_repo

- name: Download repmgr repo script
  get_url: 
    url: https://dl.2ndquadrant.com/default/release/get/13/rpm 
    dest: /tmp/repmgr_repo.sh
  when: not repmgr_repo.stat.exists

- name: Install repmgr repo
  shell: . /tmp/repmgr_repo.sh
  when: not repmgr_repo.stat.exists

- name: Remove the repmgr repo script
  file: 
    path: /tmp/repmgr_repo.sh
    state: absent
  when: not repmgr_repo.stat.exists

- name: Install repmgr
  yum:
    name: repmgr13
    state: present

- name: Install pgpool 4.2.1 repository
  yum:
    name: https://www.pgpool.net/yum/rpms/4.2/redhat/rhel-7-x86_64/pgpool-II-release-4.2-1.noarch.rpm
    state: present
    
- name: Install pgpool extensions
  yum:
    name: pgpool-II-pg13-extensions
    state: present

- name: Install other useful packages
  yum:
    name: python2-cryptography,python-psycopg2,sudo,iproute,openssh-clients
    state: present

- name: Set PGDATA in systemctl start script
  lineinfile:
    path: /usr/lib/systemd/system/postgresql-13.service
    regexp: '^Environment=PGDATA='
    line: 'Environment=PGDATA={{ postgresql_data }}'
  register: pgdata

- name: Run systemctl daemon-reload
  systemd:
    daemon_reload: yes
  when: pgdata.changed

- name: Copy postgresql.conf
  template:
    src: files/postgresql.conf.j2
    dest: '{{ postgresql_data }}/postgresql.conf'
    owner: postgres
    group: postgres
    mode: '0644'
  notify: Reload postgreSQL-13

- name: Copy pg_hba.conf
  copy:
    src: files/pg_hba.conf
    dest: '{{ postgresql_data }}/pg_hba.conf'
    owner: postgres
    group: postgres
    mode: '0644'
  notify: Reload postgreSQL-13

- name: Generate an OpenSSL private key 
  community.crypto.openssl_privatekey:
    path: '{{ postgresql_data }}/server.key'
  become: yes
  become_user: postgres
  
- name: Generate an OpenSSL Certificate Signing Request
  community.crypto.openssl_csr:
    path: '{{ postgresql_data }}/server.csr'
    privatekey_path: '{{ postgresql_data }}/server.key'
    common_name: '{{ ansible_fqdn }}'
  become: yes
  become_user: postgres

- name: Generate a Self Signed OpenSSL certificate
  community.crypto.x509_certificate:
    path: '{{ postgresql_data }}/server.crt'
    privatekey_path: '{{ postgresql_data }}/server.key'
    csr_path: '{{ postgresql_data }}/server.csr'
    provider: selfsigned
  become: yes
  become_user: postgres

- name: Start postgresql-13 and disable it at boot
  systemd:
    state: started
    name: postgresql-13
    enabled: no

- name: Create pg_stat_statement extensions
  community.postgresql.postgresql_ext:
    name: pg_stat_statements
    db: postgres
    port: '{{ postgresql_port }}'
  become_user: postgres
  when: primary_db == inventory_hostname

- name: Create {{ repmgr_user }} superuser in postgresql
  postgresql_user:
    port: '{{ postgresql_port }}'
    name: '{{ repmgr_user }}'
    password: '{{ repmgr_password }}'
    role_attr_flags: SUPERUSER
  become: yes
  become_user: postgres
  when: primary_db == inventory_hostname

- name: Create a repmgr database
  postgresql_db:
    port: '{{ postgresql_port }}'
    name: 'repmgr'
    owner: '{{ repmgr_user }}'
  become: yes
  become_user: postgres
  when: primary_db == inventory_hostname

- name: Create {{ pgpool_postgres_user }} user in postgresql
  postgresql_user:
    port: '{{ postgresql_port }}'
    name: '{{ pgpool_postgres_user }}'
    password: '{{ pgpool_postgres_password }}'
  become: yes
  become_user: postgres
  when: primary_db == inventory_hostname

- name: Grant pg_monitor priv to {{ pgpool_postgres_user }}
  postgresql_privs:
    port: '{{ postgresql_port }}'
    db: postgres
    type: group
    objs: pg_monitor
    role: '{{ pgpool_postgres_user }}'      
  become: yes
  become_user: postgres
  when: primary_db == inventory_hostname

- name: Copy repmgr.conf
  template:
    src: files/repmgr.conf.j2
    dest: /etc/repmgr/13/repmgr.conf
    owner: root
    group: root
    mode: '0644'

- name: Start postgresql-13
  systemd:
    name: postgresql-13
    state: started
  when: postgres_install.changed

- name: Get to know where postgres home directory is
  user:
    name: postgres
    state: present
  register: postgres_env_vars

- name: Create .pgpass file in postgres home dir
  template:
    src: files/pgpass.j2
    dest: '{{ postgres_env_vars.home }}/.pgpass'
    owner: postgres
    group: postgres
    mode: '0600'

- name: Set synchronous_standby_names option
  postgresql_set:
    port: '{{ postgresql_port }}'
    name: synchronous_standby_names
    value: "1 ({{ standby_names['%s' | format(inventory_hostname) ] }})"
  become: yes
  become_user: postgres

- name: Create a sudoers.d file for postgresql
  template:
    src: files/postgresql_sudoers.j2
    dest: /etc/sudoers.d/postgresql
    owner: root
    group: root
    mode: '0400'

- name: Create directory ~postgres/.ssh if it does not exist
  file:
    path: '{{ postgres_env_vars.home }}/.ssh'
    state: directory
    owner: postgres
    group: postgres
    mode: '0700'

- name: Copy ssh priv key for postgres
  template:
    src: files/id_rsa.j2
    dest: '{{ postgres_env_vars.home }}/.ssh/id_rsa'
    owner: postgres
    group: postgres
    mode: '0600'

- name: Copy ssh public key for postgres
  copy:
    src: files/id_rsa.pub
    dest: '{{ postgres_env_vars.home }}/.ssh/id_rsa.pub'
    owner: postgres
    group: postgres
    mode: '0644'

- name: Set authorized key to let pgpool connect
  authorized_key:
    user: postgres
    state: present
    key: "{{ lookup('file', 'files/pgpool_ssh_key.pub') }}"

- name: Set authorized key to let other db instances connect
  authorized_key:
    user: postgres
    state: present
    key: "{{ lookup('file', 'files/id_rsa.pub') }}"
